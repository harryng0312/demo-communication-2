//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: user.proto

package org.harryng.communication.rpc.gen;

@kotlin.jvm.JvmSynthetic
inline fun chatMessage(block: org.harryng.communication.rpc.gen.ChatMessageKt.Dsl.() -> kotlin.Unit): org.harryng.communication.rpc.gen.ChatMessage =
  org.harryng.communication.rpc.gen.ChatMessageKt.Dsl._create(org.harryng.communication.rpc.gen.ChatMessage.newBuilder()).apply { block() }._build()
object ChatMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: org.harryng.communication.rpc.gen.ChatMessage.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.harryng.communication.rpc.gen.ChatMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.harryng.communication.rpc.gen.ChatMessage = _builder.build()

    /**
     * <code>string id = 1;</code>
     */
    var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>string id = 1;</code>
     */
    fun clearId() {
      _builder.clearId()
    }

    /**
     * <code>string senderId = 2;</code>
     */
    var senderId: kotlin.String
      @JvmName("getSenderId")
      get() = _builder.getSenderId()
      @JvmName("setSenderId")
      set(value) {
        _builder.setSenderId(value)
      }
    /**
     * <code>string senderId = 2;</code>
     */
    fun clearSenderId() {
      _builder.clearSenderId()
    }

    /**
     * <code>string receiverId = 3;</code>
     */
    var receiverId: kotlin.String
      @JvmName("getReceiverId")
      get() = _builder.getReceiverId()
      @JvmName("setReceiverId")
      set(value) {
        _builder.setReceiverId(value)
      }
    /**
     * <code>string receiverId = 3;</code>
     */
    fun clearReceiverId() {
      _builder.clearReceiverId()
    }

    /**
     * <code>.org.harryng.communication.grpc.MessageType type = 4;</code>
     */
    var type: org.harryng.communication.rpc.gen.MessageType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <code>.org.harryng.communication.grpc.MessageType type = 4;</code>
     */
    fun clearType() {
      _builder.clearType()
    }

    /**
     * <code>bytes message = 5;</code>
     */
    var message: com.google.protobuf.ByteString
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * <code>bytes message = 5;</code>
     */
    fun clearMessage() {
      _builder.clearMessage()
    }

    /**
     * <code>.org.harryng.communication.grpc.MessageState state = 6;</code>
     */
    var state: org.harryng.communication.rpc.gen.MessageState
      @JvmName("getState")
      get() = _builder.getState()
      @JvmName("setState")
      set(value) {
        _builder.setState(value)
      }
    /**
     * <code>.org.harryng.communication.grpc.MessageState state = 6;</code>
     */
    fun clearState() {
      _builder.clearState()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun org.harryng.communication.rpc.gen.ChatMessage.copy(block: org.harryng.communication.rpc.gen.ChatMessageKt.Dsl.() -> kotlin.Unit): org.harryng.communication.rpc.gen.ChatMessage =
  org.harryng.communication.rpc.gen.ChatMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()
