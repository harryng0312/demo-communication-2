logging.config=classpath:logback.xml
#logging.config=classpath:log4j.xml
# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
#camel.springboot.name=camel
# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
server.port=9090
server.servlet.context-path=/web
#spring.mvc.servlet.path=/mvc
# lets use a different management port in case you need to listen to HTTP requests on 8080
#management.port=8081
management.server.address=0.0.0.0
management.server.port=9091
spring.main.allow-bean-definition-overriding=true
spring.jpa.open-in-view=false
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#hibernate.temp.use_jdbc_metadata_defaults=false
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect
#spring.jpa.show-sql=true
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\
  org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, \
  org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, \
  org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# disable all management enpoints except health
management.endpoints.enabled-by-default=true
management.endpoint.health.enabled=true
# REACTIVE, SERVLET
#spring.main.web-application-type=servlet
#camel.springboot.main-run-controller=true
management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true
#spring.datasource.url=jdbc:postgresql://localhost:5432/test_db
#spring.datasource.driver-class-name=org.postgresql.Driver
#for >2: server.servlet.context-path=/ws
#server.context-path=/ws
#camel.component.servlet.mapping.contextPath=/ws/*
# turn off
#camel.springboot.xmlRoutes = true
# scan in the com/foo/routes classpath
#camel.springboot.xmlRoutes = classpath:spring/route/*.xml
# turn off
# camel.springboot.xmlRests = false
# scan in the com/foo/routes classpath
#camel.springboot.xmlRests = classpath:spring/rest/*.xml

# spring.thymeleaf.enabled=false
spring.mvc.view.prefix=/WEB-INF/pages/
spring.mvc.view.suffix=.html
server.error.path=/WEB-INF/error/
server.error.suffix=.html
server.error.whitelabel.enabled=true

# spring.mvc.static-path-pattern=/**
#server.tomcat.additional-tld-skip-patterns=derbyLocale_*.jar,jaxb-api.jar,jsr173_1.0_api.jar,jaxb-impl.jar,jaxb-core.jar,activation.jar
#server.tomcat.additional-tld-skip-patterns=jaxb-api.jar,jaxb-impl.jar,jaxb-core.jar
#logging.level.org.springframework=TRACE
#logging.level.com=TRACE